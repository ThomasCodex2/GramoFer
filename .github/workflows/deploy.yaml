name: Auto Deploy on Azure

on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.16.0
        with:
          java-version: 21
      - name: Build Backend
        working-directory: ./IzvorniKod/Backend
        run: mvn clean install -Dmaven.test.skip=true
      - name: Copy Backend to remote Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "IzvorniKod/Backend/target/gramofer*.jar"
          target: ~/GramoFer_Deploy_Backend/
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
        with: 
          node-version: '18.20.5'
      - name: Build Frontend
        working-directory: ./IzvorniKod/Frontend/GramoFER
        run: |
          npm install
          npx vite build
      - name: Copy Frontend to remote Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "IzvorniKod/Frontend/GramoFER/dist/"
          target: ~/GramoFer_Deploy_Frontend/
  deploy:
    needs: build
    name: Deploy
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: 'actions/checkout@v4'
        with:
          ref: main
          token: ${{ github.token }}
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          environment: production
      - name: SSH to VPS and Deploy
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export AIVEN_PASSWORD=${{ secrets.AIVEN_PASSWORD }}
            cd GramoFer_Deploy_Backend/
            kill $(cat ./backend.pid) || true
            rm current.jar || true
            cp IzvorniKod/Backend/target/gramofer*.jar current.jar
            nohup java -jar current.jar > /dev/null 2>&1 & echo $! > ./backend.pid
      - name: Update deployment Status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.MY_APP }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

