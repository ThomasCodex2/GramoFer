CREATE TABLE KorisnickiRacun
(
  idKorisnika INT NOT NULL,
  username VARCHAR(30) NOT NULL,
  email VARCHAR(50) NOT NULL,
  lozinka VARCHAR(30) NOT NULL,
  ime VARCHAR(20) NOT NULL,
  prezime VARCHAR(30) NOT NULL,
  jeAdmin INT NOT NULL,
  datumRegistracije DATE NOT NULL,
  PRIMARY KEY (idKorisnika),
  UNIQUE (username),
  UNIQUE (email)
);

CREATE TABLE zanr
(
  idZanra INT NOT NULL,
  nazivZanra VARCHAR(100) NOT NULL,
  PRIMARY KEY (idZanra)
);

CREATE TABLE zamjena
(
  idZamjene INT NOT NULL,
  status VARCHAR(40) NOT NULL,
  datum DATE NOT NULL,
  idKorisnika INT NOT NULL,
  primateljidKorisnika INT NOT NULL,
  PRIMARY KEY (idZamjene),
  FOREIGN KEY (idKorisnika) REFERENCES KorisnickiRacun(idKorisnika),
  FOREIGN KEY (primateljidKorisnika) REFERENCES KorisnickiRacun(idKorisnika)
);

CREATE TABLE listaZelja
(
  idListeZelja INT NOT NULL,
  zeliNazivAlbuma VARCHAR(100) NOT NULL,
  zeliIzvodjaca VARCHAR(100) NOT NULL,
  idKorisnika INT NOT NULL,
  PRIMARY KEY (idListeZelja),
  FOREIGN KEY (idKorisnika) REFERENCES KorisnickiRacun(idKorisnika)
);

CREATE TABLE PLOCA
(
  idPloce INT NOT NULL,
  oznakaIzdanja VARCHAR(100) NOT NULL,
  nazivAlbuma VARCHAR(100) NOT NULL,
  godinaIzdavanja INT NOT NULL,
  stanjePloce VARCHAR(20) NOT NULL,
  stanjeOmota VARCHAR(20) NOT NULL,
  lokacija VARCHAR(255) NOT NULL,
  opis VARCHAR(255),
  izvodjac VARCHAR(100) NOT NULL,
  pathPloca1 VARCHAR(255) NOT NULL,
  pathPloca2 VARCHAR(255),
  pathOmot1 VARCHAR(255) NOT NULL,
  pathOmot2 VARCHAR(255),
  idKorisnika INT NOT NULL,
  PRIMARY KEY (idPloce),
  FOREIGN KEY (idKorisnika) REFERENCES KorisnickiRacun(idKorisnika)
);

CREATE TABLE pripadaZanru
(
  idPloce INT NOT NULL,
  idZanra INT NOT NULL,
  PRIMARY KEY (idPloce, idZanra),
  FOREIGN KEY (idPloce) REFERENCES PLOCA(idPloce),
  FOREIGN KEY (idZanra) REFERENCES zanr(idZanra)
);

CREATE TABLE ukljucujePlocu
(
  idZamjene INT NOT NULL,
  idPloce INT NOT NULL,
  PRIMARY KEY (idZamjene, idPloce),
  FOREIGN KEY (idZamjene) REFERENCES zamjena(idZamjene),
  FOREIGN KEY (idPloce) REFERENCES PLOCA(idPloce)
);